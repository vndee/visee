#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

../external/essentials/include/essentials.hpp
algorithm
-
chrono
-
fstream
-
numeric
-
random
-
type_traits
-
vector
-
dirent.h
-
cstring
-
locale
-
unistd.h
-
sys/stat.h
-
cassert
-

../include/autocomplete.hpp
util_types.hpp
../include/util_types.hpp
autocomplete_common.hpp
../include/autocomplete_common.hpp
scored_string_pool.hpp
../include/scored_string_pool.hpp
constants.hpp
../include/constants.hpp

../include/autocomplete2.hpp
util_types.hpp
../include/util_types.hpp
building_util.hpp
../include/building_util.hpp
compact_vector.hpp
../include/compact_vector.hpp
autocomplete_common.hpp
../include/autocomplete_common.hpp
scored_string_pool.hpp
../include/scored_string_pool.hpp
constants.hpp
../include/constants.hpp

../include/autocomplete3.hpp
util_types.hpp
../include/util_types.hpp
building_util.hpp
../include/building_util.hpp
compact_vector.hpp
../include/compact_vector.hpp
autocomplete_common.hpp
../include/autocomplete_common.hpp
scored_string_pool.hpp
../include/scored_string_pool.hpp
constants.hpp
../include/constants.hpp

../include/autocomplete4.hpp
util_types.hpp
../include/util_types.hpp
building_util.hpp
../include/building_util.hpp
compact_vector.hpp
../include/compact_vector.hpp
autocomplete_common.hpp
../include/autocomplete_common.hpp
scored_string_pool.hpp
../include/scored_string_pool.hpp
constants.hpp
../include/constants.hpp

../include/autocomplete_common.hpp
util_types.hpp
../include/util_types.hpp
min_heap.hpp
../include/min_heap.hpp
unsorted_list.hpp
../include/unsorted_list.hpp
minimal_docids.hpp
../include/minimal_docids.hpp
succinct_rmq/cartesian_tree.hpp
../include/succinct_rmq/cartesian_tree.hpp

../include/bit_vector.hpp
cstddef
-
vector
-
util.hpp
../include/util.hpp

../include/blocked_inverted_index.hpp
algorithm
-
unordered_map
-
bit_vector.hpp
../include/bit_vector.hpp
ef/ef_sequence.hpp
../include/ef/ef_sequence.hpp
ef/compact_ef.hpp
../include/ef/compact_ef.hpp
parameters.hpp
../include/parameters.hpp

../include/building_util.hpp
util.hpp
../include/util.hpp
bit_vector.hpp
../include/bit_vector.hpp

../include/compact_forward_index.hpp
parameters.hpp
../include/parameters.hpp
compact_vector.hpp
../include/compact_vector.hpp
ef/ef_sequence.hpp
../include/ef/ef_sequence.hpp

../include/compact_vector.hpp
util.hpp
../include/util.hpp

../include/completion_trie.hpp
parameters.hpp
../include/parameters.hpp
util_types.hpp
../include/util_types.hpp

../include/constants.hpp

../include/ef/compact_ef.hpp
stdexcept
-
ef_parameters.hpp
../include/ef/ef_parameters.hpp
util.hpp
../include/ef/util.hpp
bit_vector.hpp
../include/ef/bit_vector.hpp

../include/ef/darray.hpp
bit_vector.hpp
../include/ef/bit_vector.hpp
util.hpp
../include/ef/util.hpp

../include/ef/ef_parameters.hpp

../include/ef/ef_sequence.hpp
bit_vector.hpp
../include/ef/bit_vector.hpp
darray.hpp
../include/ef/darray.hpp
util_types.hpp
../include/ef/util_types.hpp

../include/fc_dictionary.hpp
cmath
-
uint_vec.hpp
../include/uint_vec.hpp
parameters.hpp
../include/parameters.hpp
util_types.hpp
../include/util_types.hpp
constants.hpp
../include/constants.hpp

../include/integer_codes.hpp
util.hpp
../include/util.hpp
bit_vector.hpp
../include/bit_vector.hpp

../include/integer_fc_dictionary.hpp
cmath
-
uint_vec.hpp
../include/uint_vec.hpp
parameters.hpp
../include/parameters.hpp
util_types.hpp
../include/util_types.hpp
constants.hpp
../include/constants.hpp

../include/inverted_index.hpp
parameters.hpp
../include/parameters.hpp
integer_codes.hpp
../include/integer_codes.hpp
building_util.hpp
../include/building_util.hpp
ef/ef_sequence.hpp
../include/ef/ef_sequence.hpp

../include/min_heap.hpp
vector
-
algorithm
-

../include/minimal_docids.hpp
compact_vector.hpp
../include/compact_vector.hpp
util_types.hpp
../include/util_types.hpp

../include/parameters.hpp
fstream
-
vector
-
cassert
-
constants.hpp
../include/constants.hpp

../include/probe.hpp
vector
-
util_types.hpp
../include/util_types.hpp

../include/scored_string_pool.hpp
util_types.hpp
../include/util_types.hpp

../include/statistics.hpp
completion_trie.hpp
../include/completion_trie.hpp
autocomplete.hpp
../include/autocomplete.hpp
autocomplete2.hpp
../include/autocomplete2.hpp
autocomplete3.hpp
../include/autocomplete3.hpp
autocomplete4.hpp
../include/autocomplete4.hpp

../include/succinct_rmq/bp_vector.hpp
vector
-
algorithm
-
limits
-
rs_bit_vector.hpp
../include/succinct_rmq/rs_bit_vector.hpp

../include/succinct_rmq/bp_vector_support.hpp
bp_vector.hpp
../include/succinct_rmq/bp_vector.hpp
util.hpp
../include/succinct_rmq/util.hpp

../include/succinct_rmq/cartesian_tree.hpp
vector
-
bp_vector.hpp
../include/succinct_rmq/bp_vector.hpp
bp_vector_support.hpp
../include/succinct_rmq/bp_vector_support.hpp
util.hpp
../include/succinct_rmq/util.hpp

../include/succinct_rmq/rs_bit_vector.hpp
vector
-
algorithm
-
bit_vector.hpp
../include/succinct_rmq/bit_vector.hpp

../include/types.hpp
completion_trie.hpp
../include/completion_trie.hpp
fc_dictionary.hpp
../include/fc_dictionary.hpp
integer_fc_dictionary.hpp
../include/integer_fc_dictionary.hpp
compact_forward_index.hpp
../include/compact_forward_index.hpp
inverted_index.hpp
../include/inverted_index.hpp
blocked_inverted_index.hpp
../include/blocked_inverted_index.hpp
autocomplete.hpp
../include/autocomplete.hpp
autocomplete2.hpp
../include/autocomplete2.hpp
autocomplete3.hpp
../include/autocomplete3.hpp
autocomplete4.hpp
../include/autocomplete4.hpp
compact_vector.hpp
../include/compact_vector.hpp
ef/ef_sequence.hpp
../include/ef/ef_sequence.hpp
ef/compact_ef.hpp
../include/ef/compact_ef.hpp

../include/uint_vec.hpp
vector
-
util.hpp
../include/util.hpp

../include/unsorted_list.hpp
compact_vector.hpp
../include/compact_vector.hpp
util_types.hpp
../include/util_types.hpp

../include/util.hpp
string.h
-
sys/time.h
-
cassert
-
ctime
-
iostream
-
locale
-
vector
-
smmintrin.h
-
xmmintrin.h
-
../external/essentials/include/essentials.hpp
../external/essentials/include/essentials.hpp

../include/util_types.hpp
vector
-
functional
-
chrono
-
util.hpp
../include/util.hpp

/home/hoang/Desktop/autocomplete/benchmark/benchmark_common.hpp
../external/cmd_line_parser/include/parser.hpp
/home/hoang/Desktop/autocomplete/external/cmd_line_parser/include/parser.hpp
probe.hpp
/home/hoang/Desktop/autocomplete/benchmark/probe.hpp

/home/hoang/Desktop/autocomplete/benchmark/benchmark_locate_prefix.cpp
iostream
-
types.hpp
/home/hoang/Desktop/autocomplete/benchmark/types.hpp
statistics.hpp
/home/hoang/Desktop/autocomplete/benchmark/statistics.hpp
benchmark_common.hpp
/home/hoang/Desktop/autocomplete/benchmark/benchmark_common.hpp

/home/hoang/Desktop/autocomplete/external/cmd_line_parser/include/parser.hpp
vector
-
unordered_map
-
algorithm
-
sstream
-
type_traits
-
cassert
-

